name: Build Grasshopper MCP Component

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for versioning
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
    
    - name: Restore dependencies
      run: dotnet restore GH_MCP/GH_MCP.sln
    
    - name: Build for .NET Framework 4.8 (Rhino 7/8)
      run: |
        dotnet build GH_MCP/GH_MCP.sln --configuration Release --framework net48 --no-restore
        echo "Build completed for net48"
    
    - name: Build for .NET 7.0 Windows (Rhino 8)
      run: |
        dotnet build GH_MCP/GH_MCP.sln --configuration Release --framework net7.0-windows --no-restore
        echo "Build completed for net7.0-windows"
    
    - name: Build for .NET 7.0 (Cross-platform)
      run: |
        dotnet build GH_MCP/GH_MCP.sln --configuration Release --framework net7.0 --no-restore
        echo "Build completed for net7.0"
    
    - name: List build outputs
      run: |
        echo "=== Build Outputs ==="
        Get-ChildItem -Path "GH_MCP\GH_MCP\bin\Release\net48\*.gha" -Recurse -ErrorAction SilentlyContinue
        Get-ChildItem -Path "GH_MCP\GH_MCP\bin\Release\net7.0-windows\*.gha" -Recurse -ErrorAction SilentlyContinue
        Get-ChildItem -Path "GH_MCP\GH_MCP\bin\Release\net7.0\*.gha" -Recurse -ErrorAction SilentlyContinue
    
    - name: Upload .NET Framework 4.8 build artifact
      uses: actions/upload-artifact@v4
      with:
        name: GH_MCP-net48
        path: GH_MCP/GH_MCP/bin/Release/net48/GH_MCP.gha
        retention-days: 30
    
    - name: Upload .NET 7.0 Windows build artifact
      uses: actions/upload-artifact@v4
      with:
        name: GH_MCP-net7.0-windows
        path: GH_MCP/GH_MCP/bin/Release/net7.0-windows/GH_MCP.gha
        retention-days: 30
    
    - name: Upload .NET 7.0 build artifact
      uses: actions/upload-artifact@v4
      with:
        name: GH_MCP-net7.0
        path: GH_MCP/GH_MCP/bin/Release/net7.0/GH_MCP.gha
        retention-days: 30
    
    - name: Copy builds to releases folder
      run: |
        echo "=== Copying builds to releases folder ==="
        # Create releases directory if it doesn't exist
        if (!(Test-Path "releases")) {
          New-Item -ItemType Directory -Path "releases"
        }
        
        # Copy the primary build (net48) as the main GH_MCP.gha
        if (Test-Path "GH_MCP/GH_MCP/bin/Release/net48/GH_MCP.gha") {
          Copy-Item "GH_MCP/GH_MCP/bin/Release/net48/GH_MCP.gha" "releases/GH_MCP.gha" -Force
          echo "Copied net48 build to releases/GH_MCP.gha"
        }
        
        # Copy framework-specific builds with version info
        if (Test-Path "GH_MCP/GH_MCP/bin/Release/net48/GH_MCP.gha") {
          Copy-Item "GH_MCP/GH_MCP/bin/Release/net48/GH_MCP.gha" "releases/GH_MCP-v1.0-net48.gha" -Force
          echo "Copied net48 build to releases/GH_MCP-v1.0-net48.gha"
        }
        
        if (Test-Path "GH_MCP/GH_MCP/bin/Release/net7.0-windows/GH_MCP.gha") {
          Copy-Item "GH_MCP/GH_MCP/bin/Release/net7.0-windows/GH_MCP.gha" "releases/GH_MCP-v1.0-net7.0-windows.gha" -Force
          echo "Copied net7.0-windows build to releases/GH_MCP-v1.0-net7.0-windows.gha"
        }
        
        if (Test-Path "GH_MCP/GH_MCP/bin/Release/net7.0/GH_MCP.gha") {
          Copy-Item "GH_MCP/GH_MCP/bin/Release/net7.0/GH_MCP.gha" "releases/GH_MCP-v1.0-net7.0.gha" -Force
          echo "Copied net7.0 build to releases/GH_MCP-v1.0-net7.0.gha"
        }
        
        # List what was copied
        echo "=== Files in releases folder ==="
        Get-ChildItem "releases/*.gha" | ForEach-Object { echo $_.Name }
    
    - name: Commit and push releases
      run: |
        echo "=== Committing releases to repository ==="
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add releases/
        git commit -m "Update build artifacts [skip ci]" || echo "No changes to commit"
        git push origin HEAD:main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 